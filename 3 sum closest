class Solution {
public:
    int threeSumClosest(vector<int>& nums, int target) {
        sort(nums.begin(), nums.end());
        int ans = 0;
        // temp is used to check if the new sum is much closer to the target or not 
        int temp = INT_MAX;
        int n = nums.size();
        for(int i=0;i<n-2; i++){
            // to avoid duplicate
            if(i>0 && nums[i] == nums[i-1]) continue;
            int l = i+1, r = nums.size() - 1;
            while(l<r){
                int sum = nums[i] + nums[l] + nums[r];
                if(abs(sum-target) < temp){
                    // make ans = sum when the difference is much closer to target than previous sum 
                    temp = abs(sum - target);
                    ans = sum;
                }
                if(sum < target) l++;
                else if(sum > target) r--;
                else{
                    // this is when a sum closest to the target is achieved 
                    ans = sum;
                    i = n-2;
                    break;
                }
            }
        }
        return ans;
    }
};
